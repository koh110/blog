{"componentChunkName":"component---src-templates-blog-post-js","path":"/2019-10-28-darkmode-css/","result":{"data":{"site":{"siteMetadata":{"title":"kohsweblog","author":"koh110"}},"markdownRemark":{"id":"7c6c2ed7-b1c6-516e-9ba8-a8d5ff979576","excerpt":"きっかけ デフォルトは OS のダークモードをみて対応したいけど、JavaScript で切り替えにも対応したい。 そして色とかスタイルに関わる責務は CSS に寄せて、JavaScript はただ切り替えのロジックにだけ集中したい。  を使った CSS…","html":"<h1 id=\"きっかけ\"><a href=\"#%E3%81%8D%E3%81%A3%E3%81%8B%E3%81%91\" aria-label=\"きっかけ permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>きっかけ</h1>\n<p>デフォルトは OS のダークモードをみて対応したいけど、JavaScript で切り替えにも対応したい。</p>\n<p>そして色とかスタイルに関わる責務は CSS に寄せて、JavaScript はただ切り替えのロジックにだけ集中したい。</p>\n<p><code class=\"language-text\">prefers-color-scheme</code> を使った CSS によるダークテーマ実装は、検索するとよく出てくるけど、色の管理とかが body にクラスをつけて切り替えます、というのが多かったので CSS でもカラーテーマを管理しつつ、切り替えだけ JavaScript で行う方法をまとめてみる。</p>\n<h1 id=\"css-でカラーテーマを管理する\"><a href=\"#css-%E3%81%A7%E3%82%AB%E3%83%A9%E3%83%BC%E3%83%86%E3%83%BC%E3%83%9E%E3%82%92%E7%AE%A1%E7%90%86%E3%81%99%E3%82%8B\" aria-label=\"css でカラーテーマを管理する permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>CSS でカラーテーマを管理する</h1>\n<p>テーマが切り替わるということうことは、色が同時に多数切り替わるというわけなので、変数で管理したい。</p>\n<p>CSS の Variables を管理するなら :root で書きたい。</p>\n<p>じゃあダークモードの時に変数上書きするにはどうしたらいいのか？と思って調べてみたら、次のように attribute で上書きできるということがわかった。</p>\n<p>これでカラーテーマを複数管理すれば色弱の方のアクセサビリティみたいなのにも応用できそう。</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">:root</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">--color-background-body</span><span class=\"token punctuation\">:</span> #ffffff<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">--color-body</span><span class=\"token punctuation\">:</span> #545454<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">[data-mode='dark']</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">--color-background-body</span><span class=\"token punctuation\">:</span> #15202b<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">--color-body</span><span class=\"token punctuation\">:</span> #ffffff<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h1 id=\"js-でテーマを切り替えたい\"><a href=\"#js-%E3%81%A7%E3%83%86%E3%83%BC%E3%83%9E%E3%82%92%E5%88%87%E3%82%8A%E6%9B%BF%E3%81%88%E3%81%9F%E3%81%84\" aria-label=\"js でテーマを切り替えたい permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>JS でテーマを切り替えたい</h1>\n<p><code class=\"language-text\">prefers-color-scheme</code> で OS のダークモードを判定することができます。この辺の詳細は検索するとたくさん情報が出てくるので割愛。</p>\n<p>CSS で attribute だけ定義しておくと、<code class=\"language-text\">document.documentElement.setAttribute</code> でアクセスできるというのがちょっとおもしろかった。</p>\n<p><code class=\"language-text\">window.matchMedia</code> でメディアクエリにアクセスできるので、こいつに <code class=\"language-text\">addListner</code> しておくと OS のモードが切り替わったときに連動してテーマを切り替えられる。これが発火するシーンは多くないけど自己満足で入れてる。</p>\n<p>あと本当にダークモードの切り替えができてるかのテストにはリアルタイムで反映されるのでいい。</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>window<span class=\"token punctuation\">.</span><span class=\"token function\">matchMedia</span><span class=\"token punctuation\">(</span><span class=\"token string\">'(prefers-color-scheme: dark)'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>matches<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  document<span class=\"token punctuation\">.</span>documentElement<span class=\"token punctuation\">.</span><span class=\"token function\">setAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'data-mode'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'dark'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\nwindow<span class=\"token punctuation\">.</span><span class=\"token function\">matchMedia</span><span class=\"token punctuation\">(</span><span class=\"token string\">'(prefers-color-scheme: dark)'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">addListener</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>matches<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    document<span class=\"token punctuation\">.</span>documentElement<span class=\"token punctuation\">.</span><span class=\"token function\">setAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'data-mode'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'dark'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// 今回のコードでは light は定義されてないのでデフォルトの変数に戻る</span>\n    document<span class=\"token punctuation\">.</span>documentElement<span class=\"token punctuation\">.</span><span class=\"token function\">setAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'data-mode'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'light'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>上記のコードには記載していないが、適当なチェックボックスやトグルボタンのイベントに <code class=\"language-text\">setAttribute</code> をいじるコードをいれれば、ユーザが任意のタイミングでテーマを切り替えるボタンになる。</p>\n<h1 id=\"まとめ\"><a href=\"#%E3%81%BE%E3%81%A8%E3%82%81\" aria-label=\"まとめ permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>まとめ</h1>\n<p>この方式で管理すれば、色などデザインに関わる領域は CSS、テーマの切り替え機能などロジックは JavaScript と責任を分離できてよさそう。</p>","tableOfContents":"<ul>\n<li><a href=\"/2019-10-28-darkmode-css/#%E3%81%8D%E3%81%A3%E3%81%8B%E3%81%91\">きっかけ</a></li>\n<li><a href=\"/2019-10-28-darkmode-css/#css-%E3%81%A7%E3%82%AB%E3%83%A9%E3%83%BC%E3%83%86%E3%83%BC%E3%83%9E%E3%82%92%E7%AE%A1%E7%90%86%E3%81%99%E3%82%8B\">CSS でカラーテーマを管理する</a></li>\n<li><a href=\"/2019-10-28-darkmode-css/#js-%E3%81%A7%E3%83%86%E3%83%BC%E3%83%9E%E3%82%92%E5%88%87%E3%82%8A%E6%9B%BF%E3%81%88%E3%81%9F%E3%81%84\">JS でテーマを切り替えたい</a></li>\n<li><a href=\"/2019-10-28-darkmode-css/#%E3%81%BE%E3%81%A8%E3%82%81\">まとめ</a></li>\n</ul>","frontmatter":{"title":"ダークモードを導入してCSS+JSでテーマを管理する","date":"2019-10-28"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/2019-10-28-darkmode-css/","previous":{"fields":{"slug":"/2019-10-13-vscode-vim/"},"frontmatter":{"title":"VSCode + Vim Plugin が異常に重くなる件の対処法"}},"next":null}}}