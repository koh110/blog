{"data":{"site":{"siteMetadata":{"title":"kohsweblog","author":"koh110"}},"markdownRemark":{"id":"6a6d9c23-fec9-52c7-b7f1-4bec92d93879","excerpt":"Node.js と MongoDBMongoDB はドキュメント指向データベースです。簡単に言えば JSON のような形でデータを保持できる NoSQL です。MySQL や Postgres などの RDB と違い、事前に CREATE TABLE のようなコマンドを打たなくても、insert…","html":"<h2>Node.js と MongoDB</h2>\n<p>MongoDB はドキュメント指向データベースです。簡単に言えば JSON のような形でデータを保持できる NoSQL です。</p>\n<p>MySQL や Postgres などの RDB と違い、事前に CREATE TABLE のようなコマンドを打たなくても、insert されたタイミングで collection が作成され、データが保存されます。</p>\n<p>この柔軟性は非常に強力で、開発開始までのオーバーヘッドを大きく下げてくれます。</p>\n<p>しかし、その柔軟さ故にあとから開発に加わった開発者がコードからデータの構造を読み取るのが難しいという難点もあります。</p>\n<p>Node.js で MongoDB を使う開発者は Mongoose などの ORM を利用してオブジェクトのスキーマ定義などを行ったりしていました。しかし、Mongoose は ORM という特性上内部的に Object への変更などが頻発し、パフォーマンスに影響を与えてしまうことが少なくありませんでした。そのためパフォーマンスが要求されるような箇所では Mongoose から Object への変換が行われないようにするなど工夫されることが多いですが、そうしてしまうことでまたスキーマ定義がなく自由に使えてしまうというトレードオフが発生していました。</p>\n<h2>TypeScript を組み合わせた MongoDB</h2>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> MongoClient<span class=\"token punctuation\">,</span> Collection<span class=\"token punctuation\">,</span> ObjectId <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'mongodb'</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token constant\">MONGODB_URI</span> <span class=\"token operator\">=</span> <span class=\"token string\">'mongodb://[user:password]@localhost:27017/example'</span>\n\n<span class=\"token keyword\">type</span> Test <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  _id<span class=\"token punctuation\">:</span> ObjectId\n  aa<span class=\"token punctuation\">:</span> <span class=\"token builtin\">string</span>\n  bb<span class=\"token punctuation\">:</span> <span class=\"token builtin\">string</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> collections<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n  test<span class=\"token punctuation\">:</span> Collection<span class=\"token operator\">&lt;</span>Test<span class=\"token operator\">></span>\n<span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  test<span class=\"token punctuation\">:</span> <span class=\"token keyword\">null</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">connect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> client <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> MongoClient<span class=\"token punctuation\">.</span><span class=\"token function\">connect</span><span class=\"token punctuation\">(</span><span class=\"token constant\">MONGODB_URI</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n    useNewUrlParser<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n  collections<span class=\"token punctuation\">.</span>test <span class=\"token operator\">=</span> client<span class=\"token punctuation\">.</span><span class=\"token function\">db</span><span class=\"token punctuation\">(</span><span class=\"token string\">'example'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>collection<span class=\"token operator\">&lt;</span>Test<span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token string\">'test'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","frontmatter":{"title":"MongoDB + Node.js + TypeScriptが強力すぎた","date":"2019-06-07"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/2019-06-07-mongodb-typescript/","previous":{"fields":{"slug":"/2019-01-03-chat/"},"frontmatter":{"title":"チャットシステムを作るときに知っておくべきこと"}},"next":null}}